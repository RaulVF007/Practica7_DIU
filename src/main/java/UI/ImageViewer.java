/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;

/**
 *
 * @author raulv
 */
public class ImageViewer extends javax.swing.JFrame {   

    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filter = null;
    
    Mat img = null;
    EstadisticasImagen stats = new EstadisticasImagen();
    
    JScrollBar X;
    JScrollBar Y;
    
    
    public ImageViewer() {
        initComponents();
        nu.pattern.OpenCV.loadLocally();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        X = jScrollPane1.getVerticalScrollBar();
        Y = jScrollPane1.getHorizontalScrollBar();

        X.addAdjustmentListener(new MiListener());
        Y.addAdjustmentListener(new MiListener());
    }
    
    public class MiListener implements AdjustmentListener {

        public MiListener() {
        }

        @Override
        public void adjustmentValueChanged(AdjustmentEvent e) {         
            if (img != null){
                stats.calculaEstadisticas(img, jScrollPane2.getViewport().getViewPosition(), jScrollPane2.getViewport().getExtentSize());
                String statsString = "Valores máximos: \n";
                statsString += "Rojo: " + stats.getMaximo()[0];
                statsString += " Verde: " + stats.getMaximo()[1];
                statsString += " Azul: " + stats.getMaximo()[2] + "\n";                
                statsString += "\nValores mínimos:\n";
                statsString += "Rojo: " + stats.getMinimo()[0];
                statsString += " Verde: " + stats.getMinimo()[1];
                statsString += " Azul: " + stats.getMinimo()[2] + "\n";
                statsString += "\nValores promedios: \n";
                statsString += "Rojo: " + stats.getPromedio()[0];
                statsString += " Verde: " + stats.getPromedio()[1];
                statsString += " Azul: " + stats.getPromedio()[2];
                textArea.setText(statsString);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lienzo1 = new UI.Lienzo();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitItem = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        aboutItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("ImageViewer");

        javax.swing.GroupLayout lienzo1Layout = new javax.swing.GroupLayout(lienzo1);
        lienzo1.setLayout(lienzo1Layout);
        lienzo1Layout.setHorizontalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1107, Short.MAX_VALUE)
        );
        lienzo1Layout.setVerticalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(lienzo1);

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        jMenu1.setText("File");

        openItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK));
        openItem.setText("Open image");
        openItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openItemActionPerformed(evt);
            }
        });
        jMenu1.add(openItem);
        jMenu1.add(jSeparator1);

        exitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitItem.setText("Exit");
        exitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitItemActionPerformed(evt);
            }
        });
        jMenu1.add(exitItem);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Help");

        aboutItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        aboutItem.setText("About the app");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        jMenu3.add(aboutItem);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        String text="1.- Open an image you have located in your pc at"
        + "the 'File' menu -> 'Open image'\n2.- Then, it will be shown the maximum, "
                + "minimum and average values from the RGB components of the image\n"
                + "3.- These values will be displayed while you are sliding through"
                + "the entire image with the scroll pane component";
        
        JOptionPane.showMessageDialog(rootPane, text, "About the app", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutItemActionPerformed

    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "Do you want to exit the app?", "Exit", JOptionPane.YES_NO_OPTION);
           if(res == JOptionPane.YES_OPTION){
               System.exit(0);
           }else{
           }
    }//GEN-LAST:event_exitItemActionPerformed

    private void openItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openItemActionPerformed
        filter = new FileNameExtensionFilter("Images", "jpg", "jpeg", "png");
        fc.addChoosableFileFilter(filter);
        
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION){
            File imagen = fc.getSelectedFile();
            if(isAnImage(imagen)){
                img = Imgcodecs.imread(imagen.getAbsolutePath());
                stats.calculaEstadisticas(img, jScrollPane2.getViewport().getViewPosition(), jScrollPane2.getViewport().getExtentSize());
                String statsString = "Valores máximos: \n";
                statsString += "Rojo: " + stats.getMaximo()[0];
                statsString += " Verde: " + stats.getMaximo()[1];
                statsString += " Azul: " + stats.getMaximo()[2] + "\n";                
                statsString += "\nValores mínimos:\n";
                statsString += "Rojo: " + stats.getMinimo()[0];
                statsString += " Verde: " + stats.getMinimo()[1];
                statsString += " Azul: " + stats.getMinimo()[2] + "\n";
                statsString += "\nValores promedios: \n";
                statsString += "Rojo: " + stats.getPromedio()[0];
                statsString += " Verde: " + stats.getPromedio()[1];
                statsString += " Azul: " + stats.getPromedio()[2];
                textArea.setText(statsString);
                try {
                    BufferedImage img = ImageIO.read(imagen);
                    lienzo1.drawImage(img);
                } catch (IOException ex) {
                }
            } else {
            JOptionPane.showMessageDialog(rootPane, "Extensions permitted: jpg, jpeg and png", "Extension error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int res = JOptionPane.showConfirmDialog(rootPane, "Do you want to exit the app?", "Exit", JOptionPane.YES_NO_OPTION);
           if(res == JOptionPane.YES_OPTION){
               System.exit(0);
           }else{
               
           }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageViewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JMenuItem exitItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private UI.Lienzo lienzo1;
    private javax.swing.JMenuItem openItem;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

    private boolean isAnImage(File imagen) {
               String[] imageExtensions = new String[] {"jpg", "jpeg", "png"};
        for(String imageExtension: imageExtensions){
            if (imagen.getName().endsWith(imageExtension)){
                return true;
            }
        }
        return false;
    }

}
